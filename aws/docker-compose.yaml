secrets:
  CLUSTER_SECRETS:
    external: true
    x-secrets:
      Name: /kafka/warpstream/${CLUSTER_NAME}
      JsonKeys:
        - SecretKey: cluster_id
          VarName: WARPSTREAM_DEFAULT_VIRTUAL_CLUSTER_ID
        - SecretKey: api_key
          VarName: WARPSTREAM_API_KEY
        - SecretKey: agent_pool_name
          VarName: WARPSTREAM_AGENT_POOL_NAME

services:
  warp:
    secrets:
      - CLUSTER_SECRETS
    ports:
      - 9092/tcp
      - 9999/tcp
      - 8080/tcp
    x-network:
      Ingress:
        Myself: true
        ExtSources:
          - IPv4: 0.0.0.0/0
            Name: ANY
            Ports:
              - 9092

    expose:
      - 8080/tcp
    image: public.ecr.aws/warpstream-labs/warpstream_agent:latest
    x-docker_opts:
      InterpolateWithDigest: true
    environment:
#      WARPSTREAM_DISCOVERY_HOSTNAME_OVERRIDE: "warp.${DOMAIN_NAME}"
      WARPSTREAM_DISCOVERY_KAFKA_HOSTNAME_OVERRIDE: "warp.${DOMAIN_NAME}"
      WARPSTREAM_BUCKET_URL: s3://x-s3::warp-cluster-storage::BucketName?region=x-aws::AWS::Region&prefix=cluster-01/
      WARPSTREAM_REQUIRE_AUTHENTICATION: true
    command:
      - agent
      - -requireAuthentication

x-tags:
  project: warpstream

x-route53:
  PublicZone:
    ZoneName: ${DOMAIN_NAME}
    Lookup: true

x-acm:
  warp-cert:
#    We highly recommend to create the ACM certificate separately as to not have issues and throttle the ACM requests quota
#    in case of errors
    Lookup:
      Tags:
        Name: "warp.${DOMAIN_NAME}"
#    MacroParameters:
#      DomainNames:
#        - "warp.${DOMAIN_NAME}"
#        - "*.warp.${DOMAIN_NAME}"
#      HostedZoneId: x-route53::PublicZone

x-elbv2:
  public-ingress:
    DnsAliases:
      - Route53Zone: x-route53::PublicZone
        Names:
          - "warp.${DOMAIN_NAME}"
          - "*.warp.${DOMAIN_NAME}"

    Properties:
      Scheme: internet-facing
      Type: network
      LoadBalancerAttributes:
        dns_record.client_routing_policy: partial_availability_zone_affinity
    MacroParameters:
      cross_zone: false
    Settings:
      NoAllocateEips: true
    Listeners:
      - Port: 9092
        Protocol: TLS
        Certificates:
          - x-acm: warp-cert
        Targets:
          - name: warp:warp:9092
            access: /
    Services:
      warp:warp:
        port: 9092
        protocol: TCP
        healthcheck: 9092:TCP:2:2:15:5
        TargetGroupAttributes:
          - Key: deregistration_delay.timeout_seconds
            Value: "15"
          - Key: deregistration_delay.connection_termination.enabled
            Value: "false"
          - Key: preserve_client_ip.enabled
            Value: "true"

x-s3:
  warp-cluster-storage:
    Services:
      warp:
        Access:
          bucket: ListOnly
          objects: CRUD
          s3-bucket-ssl-requests-only: true
#    Helps to make the bucket unique
    MacroParameters:
      ExpandAccountIdToBucket: true
      ExpandRegionToBucket: true
#    Properties for the S3 bucket as documented on the AWS CloudFormation docs
    Properties:
      AccelerateConfiguration:
        AccelerationStatus: Suspended
      AccessControl: BucketOwnerFullControl
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        AbortIncompleteMultipartUpload:
          DaysAfterInitiation: 1
        Rules:
          - Id: InfrequentAccess
            Prefix: cluster-01/
            Status: Enabled
            Transitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: '31'
              - StorageClass: INTELLIGENT_TIERING
                TransitionInDays: '90'

      MetricsConfigurations:
        - Id: EntireBucket
      ObjectLockEnabled: true
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

#    If you have an existing bucket you wish to re-use, use `Lookup`
#    Lookup:
#      Tags:
#        aws:cloudformation:logical-id: warpclusterstorage
#        project: warpstream
